{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\udcd8 Documentaci\u00f3n T\u00e9cnica y Manual de Usuario","text":"<p>Bienvenido al sitio de documentaci\u00f3n del proyecto MedusaJS con panel de administraci\u00f3n y gr\u00e1ficas interactivas, desarrollado por el Grupo 06 \u2013 UCA, Ciclo 01/2025, Facultad de Ingenier\u00eda y Arquitectura \u2013 Aplicaciones de C\u00f3digo Abierto</p>"},{"location":"#contenido","title":"Contenido","text":"<p>Esta documentaci\u00f3n est\u00e1 dividida en dos partes:</p> <ul> <li>Manual de Usuario: instalaci\u00f3n, ejecuci\u00f3n y uso del sistema.</li> <li>Documentaci\u00f3n T\u00e9cnica: arquitectura, endpoints, pruebas, riesgos.</li> </ul>"},{"location":"#tecnologias-destacadas","title":"Tecnolog\u00edas Destacadas","text":"<ul> <li>MedusaJS 2.8.x</li> <li>ReactJS + Tailwind</li> <li>PostgreSQL</li> <li>Redis</li> <li>Chart.js</li> </ul>"},{"location":"#autores","title":"\ud83d\udc65 Autores","text":"Nombre Rol Gerardo Andre Orellana Vividor Product Owner Christian Alejandro Paz Escobar Scrum Master David Neftal\u00ed Rodr\u00edguez Tech Lead No\u00e9 Bladimir Alas Moscoso Developer C\u00e9sar Adonay Zacatales L\u00f3pez Developer"},{"location":"documentacion-tecnica/apis/","title":"Descripci\u00f3n de APIs","text":""},{"location":"documentacion-tecnica/apis/#autenticacion","title":"Autenticaci\u00f3n","text":"<p>Todas las rutas est\u00e1n protegidas con JWT. Se requiere incluir el token en cada solicitud:</p> <pre><code>Authorization: Bearer &lt;token&gt;\n</code></pre>"},{"location":"documentacion-tecnica/apis/#endpoints-personalizados","title":"Endpoints Personalizados","text":""},{"location":"documentacion-tecnica/apis/#ordenes-por-region","title":"\u00d3rdenes por Regi\u00f3n","text":"<ul> <li>GET <code>/admin/routes/region_order</code></li> </ul> <pre><code>[\n  { \"region_name\": \"Mexico\", \"order_count\": 10 },\n  { \"region_name\": \"Canada\", \"order_count\": 20 }\n]\n</code></pre>"},{"location":"documentacion-tecnica/apis/#ordenes-por-cliente","title":"\u00d3rdenes por Cliente","text":"<ul> <li>GET <code>/admin/routes/client_order</code></li> </ul> <pre><code>[\n  { \"customer\": \"Juan P\u00e9rez\", \"orders\": 9 }\n]\n</code></pre>"},{"location":"documentacion-tecnica/apis/#productos-por-coleccion","title":"Productos por Colecci\u00f3n","text":"<ul> <li>GET <code>/admin/routes/collection_product</code></li> </ul> <pre><code>[\n  { \"collection_name\": \"Camisas\", \"product_count\": 13 }\n]\n</code></pre>"},{"location":"documentacion-tecnica/apis/#codigos-de-estado-http","title":"C\u00f3digos de Estado HTTP","text":"C\u00f3digo Significado 200 OK 401 No autorizado (sin token) 500 Error interno"},{"location":"documentacion-tecnica/apis/#consideraciones-tecnicas","title":"Consideraciones T\u00e9cnicas","text":"<ul> <li>Prefijo com\u00fan: <code>/admin/routes/</code></li> <li>Formato de respuesta: JSON estructurado</li> <li>Protecci\u00f3n por roles</li> <li>Consultas optimizadas con agregaciones SQL</li> </ul>"},{"location":"documentacion-tecnica/arquitectura/","title":"Arquitectura del Sistema","text":""},{"location":"documentacion-tecnica/arquitectura/#objetivo-del-sistema","title":"Objetivo del Sistema","text":"<p>El objetivo es ofrecer un dashboard administrativo para MedusaJS con m\u00e9tricas clave de negocio como \u00f3rdenes, productos y clientes, centralizadas en una interfaz gr\u00e1fica basada en React.</p>"},{"location":"documentacion-tecnica/arquitectura/#arquitectura-general","title":"Arquitectura General","text":"<ul> <li>Backend (MedusaJS + Node.js + Express): expone APIs REST seguras con JWT.</li> <li>Frontend (React + Chart.js): interfaz para visualizar gr\u00e1ficas.</li> <li>Base de Datos (PostgreSQL + Redis): almacenamiento relacional y cache.</li> <li>Seguridad: autenticaci\u00f3n con JWT, uso de variables <code>.env</code>, control de acceso por roles.</li> </ul>"},{"location":"documentacion-tecnica/arquitectura/#tecnologias-utilizadas","title":"Tecnolog\u00edas Utilizadas","text":"Componente Tecnolog\u00eda Backend API Node.js, MedusaJS, Express Frontend Admin React, Tailwind, Chart.js Base de Datos PostgreSQL, Redis Seguridad JWT, Dotenv Control de Versi\u00f3n Git, GitHub DevOps Docker, PM2, Nginx"},{"location":"documentacion-tecnica/arquitectura/#consideraciones-finales","title":"Consideraciones Finales","text":"<p>El sistema es escalable, desacoplado, compatible con microservicios y preparado para despliegues en la nube (AWS, GCP, Azure).</p>"},{"location":"documentacion-tecnica/introduccion/","title":"Introducci\u00f3n","text":"<p>Este sitio documenta la implementaci\u00f3n t\u00e9cnica del sistema MedusaJS extendido con un panel de administraci\u00f3n personalizado que incluye gr\u00e1ficas din\u00e1micas y an\u00e1lisis visual de datos de comercio electr\u00f3nico. Desarrollado por el Grupo 06 de la Universidad Centroamericana Jos\u00e9 Sime\u00f3n Ca\u00f1as en el ciclo 01/2025.</p>"},{"location":"documentacion-tecnica/riesgos/","title":"Gesti\u00f3n de Riesgos \u2013 Proyecto Medusa JS","text":""},{"location":"documentacion-tecnica/riesgos/#objetivo","title":"Objetivo","text":"<p>Identificar los principales riesgos t\u00e9cnicos y organizativos del proyecto MedusaJS con panel administrativo personalizado, y documentar las medidas tomadas para mitigarlos.</p>"},{"location":"documentacion-tecnica/riesgos/#riesgos-identificados","title":"Riesgos Identificados","text":"ID Riesgo Tipo Probabilidad Impacto Nivel de Riesgo Mitigaci\u00f3n Aplicada R01 Dificultad para integrar gr\u00e1ficas con datos din\u00e1micos T\u00e9cnico Alta Alta Cr\u00edtico Separaci\u00f3n de l\u00f3gica y presentaci\u00f3n; pruebas unitarias con mocks de datos. R02 Inexperiencia del equipo con MedusaJS Organizativo Media Alta Alto Capacitaci\u00f3n inicial, revisi\u00f3n de documentaci\u00f3n oficial y pairing por roles clave. R03 Posible p\u00e9rdida de datos durante migraciones T\u00e9cnico Media Alta Alto Backups autom\u00e1ticos antes de cada migraci\u00f3n. R04 Inestabilidad en el entorno de despliegue local T\u00e9cnico Alta Media Alto Uso de entorno controlado con Docker en desarrollo. R05 Dificultad para gestionar CORS entre frontend y backend T\u00e9cnico Media Media Medio Configuraci\u00f3n expl\u00edcita de ADMIN_CORS y STORE_CORS en archivo .env. R06 Falta de pruebas de integraci\u00f3n T\u00e9cnico Alta Alta Cr\u00edtico Se desarrollaron pruebas unitarias y se recomienda incluir E2E."},{"location":"documentacion-tecnica/riesgos/#lecciones-aprendidas","title":"Lecciones Aprendidas","text":"<ul> <li>La modularizaci\u00f3n temprana del c\u00f3digo ayud\u00f3 a mitigar m\u00faltiples riesgos t\u00e9cnicos.</li> <li>La documentaci\u00f3n clara y el uso de buenas pr\u00e1cticas REST redujeron conflictos en las APIs.</li> <li>La implementaci\u00f3n progresiva (por features) facilit\u00f3 validaciones incrementales.</li> </ul>"},{"location":"documentacion-tecnica/riesgos/#recomendaciones-finales","title":"Recomendaciones Finales","text":"<ul> <li>Incluir pruebas de integraci\u00f3n y extremo a extremo (E2E) en pr\u00f3ximos ciclos.</li> <li>Mantener CI/CD y backups en producci\u00f3n.</li> <li>Registrar manualmente todo cambio en variables de entorno cr\u00edticas.</li> <li>Evaluar riesgos de escalabilidad si se integran pasarelas de pago o ERP externos.</li> </ul>"},{"location":"documentacion-tecnica/testing/","title":"Controles sobre el Testing \u2013 Dashboard Medusa.js","text":""},{"location":"documentacion-tecnica/testing/#objetivo","title":"Objetivo","text":"<p>Asegurar la validez de la l\u00f3gica implementada en el m\u00f3dulo de dashboard, enfoc\u00e1ndose en el filtrado y ordenamiento de datos para gr\u00e1ficas.</p>"},{"location":"documentacion-tecnica/testing/#funciones-probadas","title":"Funciones Probadas","text":"Funci\u00f3n Descripci\u00f3n <code>SortByOrdersDesc</code> Ordena clientes por cantidad de pedidos (descendente). <code>SortProductsDesc</code> Ordena colecciones por n\u00famero de productos. <code>SortByRegionOrders10</code> Filtra regiones con menos de 10 \u00f3rdenes."},{"location":"documentacion-tecnica/testing/#cobertura-de-pruebas","title":"Cobertura de Pruebas","text":"<ul> <li>Framework: <code>Jest</code> + <code>ts-jest</code></li> <li>Proyecto: basado en Medusa.js y Node.js v18</li> <li>Archivo <code>utils.ts</code>: cobertura 100% (Statements, Branches, Functions, Lines)</li> </ul> <p>Exclusiones:</p> <ul> <li>GananciasChart.tsx</li> <li>ProductWidget.tsx</li> <li>Carpetas <code>/api/</code> y <code>/integration-tests/</code></li> </ul>"},{"location":"documentacion-tecnica/testing/#casos-de-prueba-documentados","title":"Casos de Prueba Documentados","text":"ID Funci\u00f3n Entrada Salida esperada Resultado TC-001 SortByOrdersDesc [3, 10, 5 pedidos] Orden: 10, 5, 3 \u2705 OK TC-002 SortProductsDesc [2, 1, 7 productos] Orden: 7, 2, 1 \u2705 OK TC-003 SortByRegionOrders10 [3, 12, 8, 11 \u00f3rdenes] Solo: 12 y 11 \u2705 OK"},{"location":"documentacion-tecnica/testing/#resultados-y-evidencias","title":"Resultados y Evidencias","text":"<ul> <li>Todas las funciones se comportaron como se esperaba.</li> <li>Cobertura 100% confirmada con:</li> </ul> <pre><code>npm run test\nnpm run test -- --coverage\n</code></pre> <p>\ud83d\udcc5 \u00daltima ejecuci\u00f3n: 28 de mayo de 2025</p>"},{"location":"documentacion-tecnica/testing/#archivos-relacionados","title":"Archivos Relacionados","text":"<ul> <li><code>utils.test.ts</code></li> <li><code>jest.config.js</code></li> <li>Carpeta <code>/coverage/</code></li> </ul>"},{"location":"documentacion-tecnica/testing/#recomendacion","title":"Recomendaci\u00f3n","text":"<p>Agregar pruebas de integraci\u00f3n y E2E para validar interacciones completas con la API.</p>"},{"location":"manual-usuario/1-requisitos/","title":"1. Requisitos Previos","text":"<p>Antes de utilizar esta versi\u00f3n personalizada de MedusaJS, aseg\u00farate de contar con:</p> <ul> <li>Node.js (versi\u00f3n 18 o superior)  </li> <li>npm (versi\u00f3n 9 o superior)  </li> <li>PostgreSQL (versi\u00f3n 14 o superior)  </li> <li>Redis (opcional pero recomendado)</li> </ul> <p>\u2b05 Volver a Introducci\u00f3n Ir a Clonaci\u00f3n \u27a1</p>"},{"location":"manual-usuario/2-clonacion/","title":"2. Clonaci\u00f3n del Proyecto","text":"<p>Repositorio del proyecto: https://github.com/CesarZacatales/Proyecto_ACA.git</p> <p>Para clonar el repositorio:</p> <pre><code>git --version\ngit clone https://github.com/CesarZacatales/Proyecto_ACA.git\ncd Proyecto_ACA\n</code></pre> <p>\u2b05 Volver a requisitos Ir a dependencias \u27a1</p>"},{"location":"manual-usuario/3-dependencias/","title":"3. Instalaci\u00f3n de Dependencias","text":"<p>Instala todas las bibliotecas del proyecto:</p> <pre><code>npm install\n</code></pre> <p>\u2b05 Volver a clonacion Ir a env \u27a1</p>"},{"location":"manual-usuario/4-env/","title":"4. Configuraci\u00f3n de Variables de Entorno (.env)","text":"<p>Aseg\u00farate de configurar correctamente la variable <code>DATABASE_URL</code> en tu archivo <code>.env</code>.</p> <pre><code>MEDUSA_ADMIN_ONBOARDING_TYPE=nextjs\nSTORE_CORS=http://localhost:8000,https://docs.medusajs.com\nADMIN_CORS=http://localhost:5173,http://localhost:9000,https://docs.medusajs.com\nAUTH_CORS=http://localhost:5173,http://localhost:9000,http://localhost:8000,https://docs.medusajs.com\nREDIS_URL=redis://localhost:6379\nJWT_SECRET=supersecret\nCOOKIE_SECRET=supersecret\nDATABASE_URL=postgresql://usuario:clave@host:puerto/base_de_datos\nMEDUSA_ADMIN_ONBOARDING_NEXTJS_DIRECTORY=my-medusa-store-storefront\n</code></pre> <p>\u2b05 Volver a dependencias Ir a migraciones \u27a1</p>"},{"location":"manual-usuario/5-migraciones/","title":"5. Migraciones y Seed de Datos","text":"<p>Aplica las migraciones necesarias:</p> <pre><code>npm run medusa migrations run\n</code></pre> <p>\u2b05 Volver a env Ir a servidor \u27a1</p>"},{"location":"manual-usuario/6-servidor/","title":"6. Inicio del Servidor","text":"<p>Inicia el backend en modo desarrollo:</p> <pre><code>npm run dev\n</code></pre> <p>Accede al sistema en: http://localhost:9000/app</p> <p>\u2b05 Volver a migraciones Ir a panel \u27a1</p>"},{"location":"manual-usuario/7-panel/","title":"7. Acceso al Panel de Administraci\u00f3n con Gr\u00e1ficas","text":"<p>Utiliza estas credenciales de prueba:</p> <ul> <li>Email: <code>admin@medusajs.com</code> </li> <li>Password: <code>supersecret</code></li> </ul> <p>Desde el panel puedes visualizar estad\u00edsticas clave y gr\u00e1ficas de an\u00e1lisis de mercado.</p> <p>\u2b05 Volver a servidor Ir a endpoints \u27a1</p>"},{"location":"manual-usuario/8-endpoints/","title":"8. Endpoints Nuevos para Gr\u00e1ficas","text":"M\u00e9todo Endpoint Descripci\u00f3n GET <code>/admin/routes/region_order</code> \u00d3rdenes por regi\u00f3n GET <code>/admin/routes/collection_product</code> Productos por colecci\u00f3n GET <code>/admin/routes/client_order</code> \u00d3rdenes por cliente <p>\u2b05 Volver a panel Ir a scripts \u27a1</p>"},{"location":"manual-usuario/9-scripts/","title":"9. Scripts \u00datiles del Proyecto","text":"Comando Descripci\u00f3n <code>npm run start</code> Inicia el backend en modo producci\u00f3n <code>npm run dev</code> Inicia el backend en modo desarrollo <code>npm run build</code> Compila el proyecto <p>\u2b05 Volver a endpoints </p>"},{"location":"manual-usuario/introduccion/","title":"Introducci\u00f3n \u2013 Manual de Usuario","text":"<p>Este manual ha sido desarrollado con el prop\u00f3sito de guiar al usuario paso a paso en la instalaci\u00f3n, configuraci\u00f3n y uso del sistema MedusaJS personalizado, el cual incorpora un panel administrativo con gr\u00e1ficas din\u00e1micas para el an\u00e1lisis de datos comerciales.</p> <p>La plataforma est\u00e1 dise\u00f1ada para facilitar la toma de decisiones estrat\u00e9gicas dentro de un entorno de comercio electr\u00f3nico, permitiendo visualizar m\u00e9tricas clave como:</p> <ul> <li>Cantidad de \u00f3rdenes por cliente o regi\u00f3n</li> <li>Distribuci\u00f3n de productos por colecci\u00f3n</li> <li>Actividad general en tiempo real del negocio</li> </ul> <p>Este documento es ideal tanto para desarrolladores que desean montar el sistema en un entorno local o en la nube, como para usuarios administrativos que necesitan acceder y utilizar las funcionalidades gr\u00e1ficas del panel.</p>"},{"location":"manual-usuario/introduccion/#que-aprenderas-en-este-manual","title":"\u00bfQu\u00e9 aprender\u00e1s en este manual?","text":"<ul> <li>C\u00f3mo preparar el entorno con los requisitos necesarios (Node, PostgreSQL, Redis)</li> <li>C\u00f3mo clonar e instalar el proyecto</li> <li>C\u00f3mo configurar las variables de entorno</li> <li>C\u00f3mo ejecutar el sistema y acceder al panel con gr\u00e1ficas</li> <li>Qu\u00e9 endpoints REST est\u00e1n disponibles para alimentar las gr\u00e1ficas</li> <li>Comandos \u00fatiles para desarrollo y producci\u00f3n</li> </ul>"},{"location":"manual-usuario/introduccion/#publico-objetivo","title":"P\u00fablico objetivo","text":"<p>Este manual est\u00e1 dirigido a:</p> <ul> <li>Desarrolladores e implementadores de soluciones MedusaJS</li> <li>Administradores de sistemas y QA</li> <li>Usuarios con conocimientos t\u00e9cnicos que requieran ejecutar o probar el sistema completo</li> </ul> <p>Se recomienda seguir cada paso en el orden presentado para asegurar una instalaci\u00f3n exitosa del sistema.</p> <p>Ir a Requisitos \u27a1</p>"}]}